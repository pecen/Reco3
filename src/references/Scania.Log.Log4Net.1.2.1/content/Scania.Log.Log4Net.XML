<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Scania.Log.Log4Net</name>
    </assembly>
    <members>
        <member name="M:Scania.Log.Log4Net.Collections.Generic.ExtensionMethods.Clone``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Make a shallow copy
            </summary>
            <remarks>
            For string, integers etc the actual values will be copied.
            If reference types then the references would be copied.
            </remarks>
            <typeparam name="T1">Type parameter 1</typeparam>
            <typeparam name="T2">Type parameter 2</typeparam>
            <param name="dict">Dictionary to clone</param>
            <returns>Clone of dictionary</returns>
        </member>
        <member name="T:Scania.Log.Log4Net.Formatting.UserExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.Formatting.UserExtension.ToUserIdWithoutDomain(System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="T:Scania.Log.Log4Net.LogServerUsageAttribute">
            <summary>
            Log Usage Attribute class for logging to Log4Net framework
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.LogServerUsageAttribute.BeforeCall(System.String,System.Object[])">
            <summary>
            Before call
            </summary>
            <param name="operationName">Operation name</param>
            <param name="inputs">Input parameters</param>
            <returns>Nothing</returns>
        </member>
        <member name="M:Scania.Log.Log4Net.LogServerUsageAttribute.AfterCall(System.String,System.Object[],System.Object,System.Object)">
            <summary>
            After call
            </summary>
            <param name="operationName">Operation name</param>
            <param name="outputs">Output parameters</param>
            <param name="returnValue">Return value</param>
            <param name="correlationState">Correlation state</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogServerUsageAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Validate request
            </summary>
            <param name="serviceDescription">Service description</param>
            <param name="serviceHostBase">Service hostbase</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogServerUsageAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Add binding parameters
            </summary>
            <param name="serviceDescription">Service description</param>
            <param name="serviceHostBase">Service hostbase</param>
            <param name="endpoints">Service endpoints</param>
            <param name="bindingParameters">Binding parameters</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogServerUsageAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Apply dispatch behavior. Adds parameter inspector objects
            </summary>
            <param name="serviceDescription">Service description</param>
            <param name="serviceHostBase">Service hostbase</param>
        </member>
        <member name="T:Scania.Log.Log4Net.LogUsage">
            <summary>
            Summary description for Log class.
            </summary>
        </member>
        <member name="F:Scania.Log.Log4Net.LogUsage.LoggerName">
            <summary>
            Name of logger defined in Log4Net.config
            </summary>      
        </member>
        <member name="F:Scania.Log.Log4Net.LogUsage.ConnectionName">
            <summary>
            App Setting for which DB connection to use
            </summary>       
        </member>
        <member name="F:Scania.Log.Log4Net.LogUsage._log">
            <summary>
            The logger instance
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.UpdateLog(log4net.ILog)">
            <summary>
            Update logger by adding new appenders
            </summary>
            <param name="inLog"></param>
            <returns></returns>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.GetLogInstance">
            <summary>
            Get the logger
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.InitAppenders(log4net.ILog)">
            <summary>
            Init and set up a new DB apender
            </summary>
            <param name="inLog">The logger to apend to</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Info(System.String)">
            <summary>
            Trace a message to the log file
            </summary>
            <param name="message">The message to trace</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Info(System.String,System.String)">
            <summary>
            Trace a message to the log file and add sorce info
            </summary>
            <param name="message">The message to trace</param>
            <param name="source">The source info</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Info(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Trace a message to the log file and add a list of properties
            </summary>
            <param name="message">Th trace message</param>
            <param name="properties">A list of aditional properties</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Info(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Trace a message to the log file, add source info and a list of properties
            </summary>
            <param name="message">The trace message</param>
            <param name="source">The source info</param>
            <param name="properties">The properties list</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Info(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Trace a message to the log file, add source info context and a list of properties
            </summary>
            <param name="message">The trace message</param>
            <param name="source">The source info</param>
            <param name="context">Get information about the calling method</param>
            <param name="properties">The properties list</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.Object)">
            <summary>
            Write warning message and exception
            </summary>
            <param name="message">Message string</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.Object,System.String)">
            <summary>
            Write warning message and exception
            </summary>
            <param name="message">Message string</param>
            <param name="context">For instance User Id</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.Object,System.Exception)">
            <summary>
            Write warning message and exception
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.Object,System.Exception,System.String)">
            <summary>
            Write warning message and exception
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
            <param name="context">For instance User Id</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.String,System.Exception,System.Boolean)">
            <summary>
            Write warning message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
            <param name="isGetCallingMethod">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteWarn(System.String,System.Boolean)">
            <summary>
            Write warning message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="isGetCallingMethod">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteDebug(System.Object)">
            <summary>
            Write debug message
            </summary>
            <param name="message">Message string</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteDebug(System.Object,System.String)">
            <summary>
            Write debug message
            </summary>
            <param name="message">Message string</param>
            <param name="context"></param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteDebug(System.Collections.IEnumerator)">
            <summary>
            Write debug message using IEnumerator interface
            </summary>
            <param name="myEnumerator">IEnumerator</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteDebug(System.Collections.IEnumerator,System.String)">
            <summary>
            Write debug message using IEnumerator interface
            </summary>
            <param name="myEnumerator">IEnumerator</param>
            <param name="context"> </param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.Object)">
            <summary>
            Write error message
            </summary>
            <param name="message">Message string</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.Object,System.String)">
            <summary>
            Write error message
            </summary>
            <param name="message">Message string</param>
            <param name="context">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.Object,System.Exception)">
            <summary>
            Write error message and exception
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.Object,System.Exception,System.String)">
            <summary>
            Write error message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
            <param name="context">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.String,System.Exception,System.String)">
            <summary>
            Write error message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
            <param name="context">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.String,System.Exception,System.Boolean)">
            <summary>
            Write error message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
            <param name="isGetMethodName">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.Error(System.String,System.Boolean)">
            <summary>
            Write message and exception and optionally info about the calling method
            </summary>
            <param name="message">Message string</param>
            <param name="isGetCallingMethod">Retrieve information about the calling method</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteFatal(System.Object)">
            <summary>
            Write fatal message
            </summary>
            <param name="message">Message string</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.WriteFatal(System.Object,System.Exception)">
            <summary>
            Write fatal message and exception
            </summary>
            <param name="message">Message string</param>
            <param name="ex">Exception</param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.GetContextString">
            <summary>
            Get current authenticated user name, user host name or if all else fails the user host address
            </summary>
            <returns>Context string</returns>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.GetUserId">
            <summary>
            Get current authenticated user name or enviroment user
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.AppendMethodName(System.String@,System.Boolean)">
            <summary>
            Add calling method name to the caling message
            </summary>
            <param name="message"></param>
            <param name="isGetCallingMethod"></param>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.GetCallingMethodName">
            <summary>
            Get calling method name
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.LogUsage.AdoNetAppenderSetup(log4net.ILog)">
            <summary>
            Static method to initiate the ADO Appenders with correct
            database connection string
            </summary>
        </member>
        <member name="T:Scania.Log.Log4Net.Properties.AssemblyInfo">
            <summary>
             This class uses the System.Reflection.Assembly class to access assembly meta-data.
            </summary>
        </member>
        <member name="M:Scania.Log.Log4Net.Properties.AssemblyInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.AssemblyName">
            <summary>
            Get the assembly name.
            </summary>
            <returns>The assembly name.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.AssemblyFullName">
            <summary>
            Get the full assembly name.
            </summary>
            <returns>The full assembly name.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.CodeBase">
            <summary>
            Get the code base.
            </summary>
            <returns>The code base.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Copyright">
            <summary>
            Get the copyright text.
            </summary>
            <returns>The copyright text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Company">
            <summary>
            Get the company text.
            </summary>
            <returns>The company text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Description">
            <summary>
            Get the description text.
            </summary>
            <returns>The description text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Product">
            <summary>
            Get the product text.
            </summary>
            <returns>The product text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Title">
            <summary>
            Get the title text.
            </summary>
            <returns>The title text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Version">
            <summary>
            Get the version text.
            </summary>
            <returns>The version text.</returns>
        </member>
        <member name="P:Scania.Log.Log4Net.Properties.AssemblyInfo.Guid">
            <summary>
            Get the GUID string.
            </summary>
            <returns>The GUID string.</returns>
        </member>
        <member name="M:Scania.Log.Log4Net.Properties.AssemblyInfo.AppVersion">
            <summary>
            Get the version info
            </summary>
            <returns>The version text.</returns>
        </member>
    </members>
</doc>
